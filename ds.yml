---
# MongoDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: mongo-pvc
---
# MongoDB Service
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongodb
  clusterIP: None # Headless service to directly communicate
---
# MongoDB Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Node.js Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-app
  template:
    metadata:
      labels:
        app: node-app
    spec:
      containers:
        - name: node-app
          image: reginbilnesar/nodejsapp:latest
          ports:
            - containerPort: 3000
          workingDir: /usr/src/app
          volumeMounts:
            - name: app-source
              mountPath: /usr/src/app
          env:
            - name: MONGO_URI
              value: mongodb://mongo-service:27017/my_database
          command: ["npm", "run", "dev"]
      volumes:
        - name: app-source
          hostPath:
            path: /usr/src/app
---
# Node.js Application Service
apiVersion: v1
kind: Service
metadata:
  name: nodeapp-service
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 3000
  selector:
    app: node-app
