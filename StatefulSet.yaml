apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-test
spec:
  serviceName: mongodb-test
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
        selector: mongodb-test
    spec:
      containers:
        - name: mongodb
          image: mongo:4.0.8
          env:
            - name: MONGO_INITDB_ROOT_USERNAME_FILE
              value: /etc/k8-test/admin/MONGO_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD_FILE
              value: /etc/k8-test/admin/MONGO_ROOT_PASSWORD
          volumeMounts:
            - name: k8-test
              mountPath: /etc/k8-test
              readOnly: true
            - name: mongodb-scripts
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
            - name: mongodb-configmap
              mountPath: /config
              readOnly: true
            - name: mongodb-data
              mountPath: /data/db

          # Health checks
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.runCommand({ ping: 1 })"
            initialDelaySeconds: 30
            periodSeconds: 10

          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.runCommand({ ping: 1 })"
            initialDelaySeconds: 30
            periodSeconds: 10

          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"

        # Node.js application container
        - name: nodejsapp
          image: reginbilnesar/nodejsapp:latest
          ports:
            - containerPort: 8080
          env:
            - name: MONGO_URI
              value: "mongodb://$(MONGO_INITDB_ROOT_USERNAME_FILE):$(MONGO_INITDB_ROOT_PASSWORD_FILE)@mongodb-test:27017/my_database" # Adjust connection string as needed
          volumeMounts:
            - name: k8-test
              mountPath: /etc/k8-test
              readOnly: true

          # Health checks for Node.js app
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10

          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10

          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"

      nodeSelector:
        size: large
      volumes:
        - name: k8-test
          secret:
            secretName: mongodb-secret
            items:
              - key: MONGO_ROOT_USERNAME
                path: admin/MONGO_ROOT_USERNAME
                mode: 0444
              - key: MONGO_ROOT_PASSWORD
                path: admin/MONGO_ROOT_PASSWORD
                mode: 0444
              - key: MONGO_USERNAME
                path: MONGO_USERNAME
                mode: 0444
              - key: MONGO_PASSWORD
                path: MONGO_PASSWORD
                mode: 0444
              - key: MONGO_USERS_LIST
                path: MONGO_USERS_LIST
                mode: 0444
        - name: mongodb-scripts
          configMap:
            name: mongodb-configmap
            items:
              - key: ensure-users.js
                path: ensure-users.js
        - name: mongodb-configmap
          configMap:
            name: mongodb-configmap
            items:
              - key: mongo.conf
                path: mongo.conf
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-pvc
